<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.questory.repository.MemberRepository">
    <insert id="regist" parameterType="com.ssafy.questory.domain.Member" useGeneratedKeys="true" keyProperty="memberId">
        INSERT INTO Members ( email, password, nickname, exp, title, created_at, is_admin, mode, is_deleted, profile_image_url )
        VALUES ( #{email}, #{password}, #{nickname}, #{exp}, #{title}, #{createdAt}, #{isAdmin}, #{mode}, #{isDeleted}, #{profileUrl} )
    </insert>
    <select id="findByEmail" parameterType="String" resultMap="memberResultMap">
        SELECT email, password, nickname, exp, title, created_at, is_admin, mode, is_deleted, profile_image_url
        FROM Members
        WHERE email = #{email}
    </select>
    <update id="changePassword" parameterType="map">
        UPDATE Members
        SET password = #{changedPassword}
        WHERE email = #{member.email}
    </update>
    <update id="modify" parameterType="com.ssafy.questory.domain.Member">
        UPDATE Members
        SET nickname = #{nickname},
        title = #{title},
        mode = #{mode}
        WHERE email = #{email}
    </update>
    <update id="withdraw" parameterType="com.ssafy.questory.domain.Member">
        UPDATE Members
        SET is_deleted = true
        WHERE email = #{email}
    </update>
    <resultMap id="memberResultMap" type="com.ssafy.questory.domain.Member">
        <id property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="exp" column="exp"/>
        <result property="title" column="title"/>
        <result property="createdAt" column="created_at"/>
        <result property="isAdmin" column="is_admin"/>
        <result property="mode" column="mode"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="profileUrl" column="profile_image_url"/>
    </resultMap>

    <select id="searchByEmailWithPaging" resultType="com.ssafy.questory.domain.Member">
        SELECT *
        FROM members m
        WHERE m.email LIKE CONCAT('%', #{email}, '%')
        AND m.email != #{requesterEmail}
        AND m.email NOT IN (
        SELECT
        CASE
        WHEN f.email1 = #{requesterEmail} THEN f.email2
        WHEN f.email2 = #{requesterEmail} THEN f.email1
        END
        FROM Friends f
        WHERE f.email1 = #{requesterEmail} OR f.email2 = #{requesterEmail}
        )
        AND m.email NOT IN (
        SELECT fr.target_email
        FROM Follow_Requests fr
        WHERE fr.requester_email = #{requesterEmail}
        AND fr.status = 'APPLIED'
        )
        LIMIT #{limit} OFFSET #{offset};
    </select>

    <select id="countByEmail" resultType="int">
        SELECT COUNT(*)
        FROM members
        WHERE email LIKE CONCAT('%', #{email}, '%')
    </select>

    <select id="getMemberExp" resultType="int">
        SELECT exp
        FROM members
        WHERE email = #{memberEmail};
    </select>

    <update id="addMemberExp">
        UPDATE members
        SET exp = #{experiencePoints}
        WHERE email = #{memberEmail};
    </update>
    <select id="getRankingList" resultType="com.ssafy.questory.domain.Ranking">
        SELECT
        ranked.nickname,
        ranked.exp,
        ranked.`rank`
        FROM (
        SELECT
        nickname,
        exp,
        @r := @r + 1 AS `rank`
        FROM Members, (SELECT @r := 0) AS init
        ORDER BY exp DESC
        LIMIT 100
        ) AS ranked
    </select>
</mapper>
