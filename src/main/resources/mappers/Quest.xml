<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.questory.repository.QuestRepository">

    <select id="findQuests" resultMap="questsMap" resultType="com.ssafy.questory.dto.response.quest.QuestsResponseDto">
        SELECT
            q.location_quest_id AS quest_id,
            q.title AS quest_title,
            a.first_image1 AS attraction_image,
            a.title AS attraction_title,
            ct.content_type_name AS content_type_name,
            a.addr1 AS attraction_address,
            q.difficulty AS quest_difficulty,
            q.quest_description AS quest_description,
            a.latitude AS attraction_latitude,
            a.longitude AS attraction_longitude
        FROM
            quests q
        JOIN
            attractions a ON q.content_type_id = a.content_type_id AND q.attraction_id = a.no
        JOIN
            contenttypes ct ON a.content_type_id = ct.content_type_id
        WHERE
            q.is_deleted = 0 AND q.is_private = 0
        LIMIT #{offset}, #{limit};
    </select>

    <select id="getTotalQuests">
        SELECT count(*) FROM quests WHERE is_deleted = 0 AND is_private = 0;
    </select>

    <select id="findValidQuestsByMemberEmail" resultMap="questsMap" resultType="com.ssafy.questory.dto.response.quest.QuestsResponseDto">
        SELECT
            q.location_quest_id AS quest_id,
            q.title AS quest_title,
            a.first_image1 AS attraction_image,
            a.title AS attraction_title,
            ct.content_type_name AS content_type_name,
            a.addr1 AS attraction_address,
            q.difficulty AS quest_difficulty,
            q.quest_description AS quest_description,
            a.latitude AS attraction_latitude,
            a.longitude AS attraction_longitude
        FROM
            quests q
        JOIN
            attractions a ON q.content_type_id = a.content_type_id AND q.attraction_id = a.no
        JOIN
            contenttypes ct ON a.content_type_id = ct.content_type_id
        WHERE
            q.location_quest_id NOT IN (select location_quest_id from members_quests where member_email = #{memberEmail})
            AND  q.is_deleted = 0 AND q.is_private = 0
        LIMIT #{offset}, #{limit};
    </select>

    <select id="getValidQuestsCntByMemberEmail">
        SELECT
            COUNT(*)
        FROM
            quests q
        WHERE
            q.location_quest_id NOT IN (select location_quest_id from members_quests where member_email = #{memberEmail})
            AND  q.is_deleted = 0 AND q.is_private = 0;
    </select>

    <select id="findValidQuestsByMemberEmailAndDifficulty" resultMap="questsMap" resultType="com.ssafy.questory.dto.response.quest.QuestsResponseDto">
        SELECT
        q.location_quest_id AS quest_id,
        q.title AS quest_title,
        a.first_image1 AS attraction_image,
        a.title AS attraction_title,
        ct.content_type_name AS content_type_name,
        a.addr1 AS attraction_address,
        q.difficulty AS quest_difficulty,
        q.quest_description AS quest_description,
        a.latitude AS attraction_latitude,
        a.longitude AS attraction_longitude
        FROM
        quests q
        JOIN
        attractions a ON q.content_type_id = a.content_type_id AND q.attraction_id = a.no
        JOIN
        contenttypes ct ON a.content_type_id = ct.content_type_id
        WHERE
        q.location_quest_id NOT IN (select location_quest_id from members_quests where member_email = #{memberEmail})
        AND  q.is_deleted = 0 AND q.is_private = 0 AND q.difficulty=#{difficulty}
        LIMIT #{offset}, #{limit};
    </select>

    <select id="getValidQuestsCntByMemberEmailAndDifficulty">
        SELECT
        COUNT(*)
        FROM
        quests q
        WHERE
        q.location_quest_id NOT IN (select location_quest_id from members_quests where member_email = #{memberEmail})
        AND  q.is_deleted = 0 AND q.is_private = 0 AND difficulty=#{difficulty};
    </select>

    <select id="findQuestsCreatedByMe" resultMap="questsMap">
        SELECT
            q.location_quest_id AS quest_id,
            q.title AS quest_title,
            a.first_image1 AS attraction_image,
            a.title AS attraction_title,
            ct.content_type_name AS content_type_name,
            a.addr1 AS attraction_address,
            q.difficulty AS quest_difficulty,
            q.quest_description AS quest_description,
            a.latitude AS attraction_latitude,
            a.longitude AS attraction_longitude
        FROM quests q
        JOIN
        attractions a
        ON q.content_type_id = a.content_type_id AND q.attraction_id = a.no
        JOIN
        contenttypes ct
        ON a.content_type_id = ct.content_type_id
        WHERE member_email = #{memberEmail} AND is_deleted = 0
        LIMIT #{offset}, #{limit};
    </select>

    <select id="getTotalQuestsCreatedByMe">
        SELECT COUNT(*)
        FROM quests q
        WHERE member_email = #{memberEmail} AND is_deleted = 0;
    </select>

    <select id="findQuestsCreatedByMeAndDifficulty" resultMap="questsMap">
        SELECT
            q.location_quest_id AS quest_id,
            q.title AS quest_title,
            a.first_image1 AS attraction_image,
            a.title AS attraction_title,
            ct.content_type_name AS content_type_name,
            a.addr1 AS attraction_address,
            q.difficulty AS quest_difficulty,
            q.quest_description AS quest_description,
            a.latitude AS attraction_latitude,
            a.longitude AS attraction_longitude
        FROM quests q
        JOIN
            attractions a
            ON q.content_type_id = a.content_type_id AND q.attraction_id = a.no
        JOIN
            contenttypes ct
            ON a.content_type_id = ct.content_type_id
        WHERE
            member_email = #{memberEmail} AND is_deleted = 0 AND difficulty = #{difficulty}
        LIMIT #{offset}, #{limit};
    </select>

    <select id="getTotalQuestsCreatedByMeAndDifficulty">
        SELECT
            COUNT(*)
        FROM
            quests q
        WHERE
            member_email = #{memberEmail} AND is_deleted = 0 AND difficulty = #{difficulty};
    </select>

    <select id="findActiveQuestsByMemberEmail" resultMap="questsMap">
        SELECT
            q.location_quest_id AS quest_id,
            q.title AS quest_title,
            a.first_image1 AS attraction_image,
            a.title AS attraction_title,
            ct.content_type_name AS content_type_name,
            a.addr1 AS attraction_address,
            q.difficulty AS quest_difficulty,
            q.quest_description AS quest_description,
            a.latitude AS attraction_latitude,
            a.longitude AS attraction_longitude
        from members_quests mq
            join quests q
            on mq.location_quest_id = q.location_quest_id
            JOIN attractions a
            ON q.attraction_id = a.no
            JOIN contenttypes ct
            ON a.content_type_id = ct.content_type_id
        where
            mq.is_completed = 'IN_PROGRESS' AND mq.member_email = #{memberEmail}
        LIMIT #{offset}, #{limit};
    </select>

    <select id="findActiveQuestsByMemberEmailAndDifficulty" resultMap="questsMap">
        SELECT
            q.location_quest_id AS quest_id,
            q.title AS quest_title,
            a.first_image1 AS attraction_image,
            a.title AS attraction_title,
            ct.content_type_name AS content_type_name,
            a.addr1 AS attraction_address,
            q.difficulty AS quest_difficulty,
            q.quest_description AS quest_description,
            a.latitude AS attraction_latitude,
            a.longitude AS attraction_longitude
        from members_quests mq
        join quests q
        on mq.location_quest_id = q.location_quest_id
        JOIN attractions a
        ON q.attraction_id = a.no
        JOIN contenttypes ct
        ON a.content_type_id = ct.content_type_id
        where mq.is_completed = 'IN_PROGRESS' AND mq.member_email = #{memberEmail} AND q.difficulty = #{difficulty}
        LIMIT #{offset}, #{limit};
    </select>

    <select id="getActiveQuestsByMemberEmail">
        SELECT
            COUNT(*)
        FROM members_quests mq
        JOIN quests q
            ON mq.location_quest_id = q.location_quest_id
        JOIN attractions a
            ON q.attraction_id = a.no
        JOIN contenttypes ct
            ON a.content_type_id = ct.content_type_id
        where mq.is_completed = 'IN_PROGRESS' AND mq.member_email = #{memberEmail};
    </select>

    <select id="getActiveQuestsByMemberEmailAndDifficulty">
        SELECT COUNT(*)
        FROM members_quests mq
        JOIN quests q
            ON mq.location_quest_id = q.location_quest_id
        JOIN attractions a
            ON q.attraction_id = a.no
        JOIN contenttypes ct
            ON a.content_type_id = ct.content_type_id
        WHERE mq.is_completed = 'IN_PROGRESS' AND mq.member_email = #{memberEmail} AND q.difficulty = #{difficulty};
    </select>

    <select id="saveQuest">
        INSERT INTO Quests (
            attraction_id,
            member_email,
            title,
            quest_description,
            difficulty,
            created_at,
            is_private,
            content_type_id,
            stamp_description
        ) VALUES (
            #{questRequestDto.attractionId},
            #{memberEmail},
            #{questRequestDto.title},
            #{questRequestDto.questDescription},
            #{questRequestDto.difficulty},
            CURRENT_DATE(),
            #{questRequestDto.isPrivate},
            #{contentTypeId},
            #{questRequestDto.stampDescription}
        )
    </select>

    <select id="getAttractionById">
        SELECT count(*) FROM attractions WHERE no=#{attractionId};
    </select>

    <select id="getContentTypeIdByAttractionId">
        SELECT content_type_id FROM attractions WHERE no=#{attractionId};
    </select>

    <select id="modifyQuest">
        UPDATE quests
        SET
        title = #{questRequestDto.title},
        quest_description= #{questRequestDto.questDescription},
        difficulty = #{questRequestDto.difficulty},
        created_at = CURRENT_DATE(),
        is_private = #{questRequestDto.isPrivate},
        stamp_description =  #{questRequestDto.stampDescription}
        WHERE
        location_quest_id = #{questId};
    </select>

    <select id="getAttractionIdByQuestId">
        SELECT attraction_id FROM quests WHERE location_quest_id=#{questId};
    </select>

    <select id="getmemberEmailByQuestId">
        SELECT member_email FROM quests WHERE location_quest_id=#{questId};
    </select>

    <select id="deleteQuest">
        UPDATE quests
        SET
            is_deleted = 1
        WHERE
            location_quest_id = #{questId};
    </select>

    <select id="getQuestCntByQuestId">
        SELECT count(*)
        FROM quests
        WHERE location_quest_id = #{questId};
    </select>

    <select id="getValidQuestCntByQuestId">
        SELECT count(*)
        FROM quests
        WHERE location_quest_id = #{questId} AND is_deleted = 0;
    </select>

    <select id="findQuestById" resultMap="questMap" resultType="com.ssafy.questory.dto.response.quest.QuestResponseDto">
        SELECT
            location_quest_id 'quest_id',
            no 'attraction_id',
            a.title 'attraction_name',
            a.addr1 'attraction_addr',
            q.title 'quest_title',
            q.difficulty 'quest_difficulty',
            q.quest_description 'quest_description',
            q.stamp_description 'stamp_description',
            q.is_private 'is_private'
        FROM
            quests q
        JOIN
            attractions a
            ON q.attraction_id = a.no
        WHERE
            location_quest_id=#{questId} AND is_deleted=0;
    </select>

    <select id="cancelQuest">
        DELETE FROM
            Members_Quests
        WHERE location_quest_id = #{questId};
    </select>

    <select id="getInProgressQuestCntByQuestId">
        SELECT COUNT(*)
        FROM members_quests
        WHERE location_quest_id = #{questId} AND is_completed = 'IN_PROGRESS';
    </select>

    <select id="startQuest">
        INSERT INTO Members_Quests(member_email, location_quest_id)
        VALUES (#{memberEmail}, #{questId});
    </select>

    <select id="getMemberQuestCntByQuestId">
        SELECT COUNT(*)
        FROM members_quests
        WHERE member_email = #{memberEmail} AND location_quest_id = #{questId};
    </select>

    <select id="completeQuest">
        UPDATE members_Quests
        SET is_completed='COMPLETED'
        WHERE member_email=#{memberEmail} AND location_quest_id= #{questId};
    </select>

    <select id="getDifficultyByQuestId">
        SELECT difficulty
        FROM quests
        WHERE location_quest_id=#{questId};
    </select>

    <resultMap type="QuestsResponseDto" id="questsMap">
        <result column="location_quest_id" property="questId" />
        <result column="quest_title" property="questTitle" />
        <result column="attraction_image" property="attractionImage" />
        <result column="attraction_title" property="attractionTitle" />
        <result column="content_type_name" property="contentTypeName" />
        <result column="attraction_address" property="attractionAddress" />
        <result column="quest_difficulty" property="questDifficulty" />
        <result column="quest_description" property="questDescription" />
        <result column="attraction_latitude" property="attractionLatitude" />
        <result column="attraction_longitude" property="attractionLongitude" />
    </resultMap>

    <resultMap type="QuestResponseDto" id="questMap">
        <result column="quest_id" property="questId" />
        <result column="attraction_id" property="attractionId" />
        <result column="attraction_name" property="attractionName" />
        <result column="attraction_addr" property="attractionAddr" />
        <result column="quest_title" property="questTitle" />
        <result column="quest_difficulty" property="questDifficulty" />
        <result column="quest_description" property="questDescription" />
        <result column="stamp_description" property="stampDescription" />
        <result column="is_private" property="isPrivate" />
    </resultMap>

    <select id="findRecommendedQuests" resultType="com.ssafy.questory.dto.response.quest.QuestRecommendationResponseDto">
        SELECT
        q.location_quest_id AS questId,
        q.title,
        q.quest_description AS description,
        q.difficulty,
        CASE q.difficulty
        WHEN 'EASY' THEN 30
        WHEN 'MEDIUM' THEN 50
        WHEN 'HARD' THEN 100
        ELSE 0
        END AS exp,
        COUNT(mq.member_email) AS participantCount,
        q.created_at
        FROM Quests q
        LEFT JOIN Members_Quests mq ON q.location_quest_id = mq.location_quest_id
        WHERE q.is_deleted = 0 AND q.is_private = 0
        GROUP BY q.location_quest_id
        ORDER BY COUNT(mq.member_email) * 0.7 + (DATEDIFF(NOW(), q.created_at) * -0.3) DESC
        LIMIT #{limit}
    </select>
</mapper>